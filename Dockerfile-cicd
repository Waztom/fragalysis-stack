FROM docker-registry.default.svc:5000/fragalysis-cicd/fragalysis-backend:latest

ENV APP_ROOT /code
ENV APP_USER_ID 2000
RUN useradd -c 'Conatiner user' --user-group --uid ${APP_USER_ID} --home-dir ${APP_ROOT} -s /bin/bash frag

RUN apt-get install -y wget gnupg bzip2
# Add in the frontend code
RUN git clone https://github.com/xchem/fragalysis-frontend ${APP_ROOT}/frontend
# Now add npm
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
RUN apt-get install -y nodejs

# Now build the code.
#
# Note (abc): Don't know how much of the npm commands are required
#             but the "npm@latest -g --no-package-lock" options added to the
#             original "npm install" command turned out to be crucial in
#             fixing the build. The changes were introduced in response to
#             receiving the error "npm ERR! cb() never called!" when building
#             in the OpenShift cluster with buildah 1.1 with or without
#             the registry-based backend.
#             Building with Docker, outside the cluster, was fine.
#
#             See: https://stackoverflow.com/questions/15393821/npm-err-cb-never-called
#             Specifically the comment from Sukhdeep Sing (Oct 24 '16)
#
RUN cd ${APP_ROOT}/frontend && npm install npm@latest -g

ADD docker-entrypoint.sh ${APP_ROOT}/docker-entrypoint.sh

# Symlink these
RUN mkdir ${APP_ROOT}/frontend/bundles/
RUN mkdir ${APP_ROOT}/static
RUN ln -s ${APP_ROOT}/frontend/bundles/ ${APP_ROOT}/static/bundles

RUN chmod 755 ${APP_ROOT}/docker-entrypoint.sh
RUN chmod 755 ${APP_ROOT}/makemigrations.sh
RUN chmod 755 ${APP_ROOT}/launch-stack.sh

RUN chown -R 2000 ${APP_ROOT} /run /var

WORKDIR ${APP_ROOT}
CMD ["./docker-entrypoint.sh"]
